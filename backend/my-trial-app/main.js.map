{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/chat-inbox/chat-inbox.component.ts","./src/app/chat-inbox/chat-inbox.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl :'./app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n \r\n}\r\n","<app-chat-inbox></app-chat-inbox>","import { Component, OnInit } from '@angular/core';\nimport { io } from 'socket.io-client';\nconst SOCKET_ENDPOINT = 'localhost:3000';\n\n@Component({\n  selector: 'app-chat-inbox',\n  templateUrl: './chat-inbox.component.html',\n  styleUrls: ['./chat-inbox.component.css']\n})\nexport class ChatInboxComponent implements OnInit {\nsocket;\nmyData;\nmessage : string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.setupSocketConnection()\n  }\n  setupSocketConnection(){\n    this.socket = io(SOCKET_ENDPOINT);\n    this.socket.on('message-broadcast', (data: string) => {\n    if (data) {\n     const element = document.createElement('li');\n     element.innerHTML = data;\n     element.style.background = 'white';\n     element.style.padding =  '15px 30px';\n     element.style.margin = '10px';\n     document.getElementById('message-list').appendChild(element);\n     }\n   });\n  }\n\n  sendMessage(){\n    this.socket.emit('message', this.message);\n    const element = document.createElement('li');\n    element.innerHTML = this.message;\n    element.style.background = 'white';\n    element.style.padding =  '15px 30px';\n    element.style.margin = '10px';\n    element.style.textAlign = 'right';\n    document.getElementById('message-list').appendChild(element);\n    this.message = '';\n  }\n}\n","<div class=\"chat-messages\">\n    <div class=\"chat-messages-show-container\">\n      <ul class=\"chat-messages-show-list\" id=\"message-list\">\n      </ul>\n    </div>\n    <div class=\"chat-messages-create-container\"> \n      <input class=\"chat-messages-create-input\" type=\"text\" [(ngModel)]=\"message\">\n      <button  class=\"chat-messages-create-button\" (click)=\"sendMessage()\"> Send </button>\n    </div>\n </div>","import { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatInboxComponent } from './chat-inbox/chat-inbox.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatInboxComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}